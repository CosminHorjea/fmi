# 16.01.2020
#

Programare Dinamica

Generalizarea Problemei Spectacolelor (https://www.geeksforgeeks.org/weighted-job-scheduling/)

Se dau n activitati [A], fiecare activitate avand 's' ora de start si 'f' ora de final si 'p' profit

Sa se gaseasca o planificare P(A) a.i. oricare x,y apartina P(A), x ∩ y = Ø si profitul sa fie maxim

Sortam crescator dupa ora de final

A={a1,a2,a3,......an}

DP[i] = profitul maxim planificand activ{a1,a2,.......ai}

Sol[i] = True/False <=> a[i] este selectata pentru a obtine profitul DP[i]

DP[0]=0 ; Sel[0] = 0
DP[1]= a1.p; sel[1]=True

DP[i] = max{ DP[i-1]; Sel[i]=False
			 DP[j]|aj.f < ai.f, aj.f maxim + ai.p; Sel[i]=True
			}
O(NlogN)

Sortare Topologica: (https://www.geeksforgeeks.org/topological-sorting/)

Lista de vecini(graf orientat):
1: 2,3
2: 3
3: 4
4:
5:
6: 3, 4, 5

topologic: 1,2,6,3,5,4

-daca punem nodurile in ordinea cala sortarea topologica ,pe orizontala, observam ca toate muchiile se duc doar in partea dreapta, asa se modeleaza si problemele de programare dinamica