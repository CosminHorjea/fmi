--LABORATOR 6
desc projects;

select * from projects;

desc works_on;

select * from works_on;

Exemplu: Să se obţină codurile salariaţilor ataşaţi tuturor proiectelor 
pentru care s-a alocat un buget egal cu 10000;

angajati - lucreaza - proiecte

proiecte - au - buget 



--Metoda 1 (utilizând de 2 ori NOT EXISTS):
SELECT DISTINCT employee_id
FROM works_on a
WHERE NOT EXISTS
        (SELECT 1
         FROM project p
         WHERE budget = 10000
         AND NOT EXISTS
                (SELECT 'x'
                 FROM works_on b
                 WHERE p.project_id = b.project_id
                 AND b.employee_id = a.employee_id
                )
        );
-- metoda 1 este identica cu metoda 4

Exemplu: Să se obţină codurile salariaţilor ataşaţi tuturor proiectelor 
pentru care s-a alocat un buget egal cu 10000;

select * from projects; -- lista tuturor proiectelor existente
  -- se observa ca p2 si p3 au buget egal cu 10k

select * from works_on;  -- lista angajatilor care lucreaza la proiecte
  -- se observa ca angajatii 145, 101, 148, 200 lucreaza la TOATE proiectele cu buget de 10k (adica la p2 si p3)

--Metoda 2 (simularea diviziunii cu ajutorul funcţiei COUNT):
SELECT employee_id
FROM works_on   -- toti angajatii care lucreaza la proiecte
WHERE project_id IN
            (SELECT project_id
             FROM projects
             WHERE budget = 10000 -- toate proiectele cu buget egal cu 10k (p2 si p3)
            ) -- daca ne oprim cu solutia in acest punct rezulta ca vom obtine angajatii
            -- care lucreaza la toate proiectele cu buget de 10k sau doar la o parte din ele
            -- (p2 sau p3)      
GROUP BY employee_id  -- grupand putem numara cate proiecte cu buget de 10k sunt asociate fiecarui angajat
HAVING COUNT(project_id)= (SELECT COUNT(*)
                           FROM projects
                           WHERE budget = 10000
                           );  -- daca nr de proiecte la care lucreaza angajatul este egal cu nr de proiecte 
                              -- cu buget de 10k => ca angajatul lucreaza la TOATE proiectele cu buget de 10k


Exemplu: Să se obţină codurile salariaţilor ataşaţi tuturor proiectelor 
pentru care s-a alocat un buget egal cu 10000;

select * from projects; -- lista tuturor proiectelor existente
  -- se observa ca p2 si p3 au buget egal cu 10k

select * from works_on;  -- lista angajatilor care lucreaza la proiecte
  -- se observa ca angajatii 145, 101, 148, 200 lucreaza la TOATE proiectele cu buget de 10k (adica la p2 si p3)
  
--Metoda 3 (operatorul MINUS):
SELECT employee_id
FROM works_on  -- lista tuturor angajatilor care lucreaza la proiecte

MINUS   -- trebuie sa eliminam angajatii care lucreaza la proiecte cu buget DIFERIT de 10k
        -- sau care lucreaza doar la o parte din proiectele cu buget EGAL cu 10k
        -- in final o sa obtin exact angajatii care lucreaza la TOATE proiectele cu buget de 10k

SELECT employee_id from
        ( SELECT employee_id, project_id
          FROM (SELECT DISTINCT employee_id FROM works_on) t1,
               (SELECT project_id FROM projects WHERE budget = 10000) t2
               
          MINUS
        
          SELECT employee_id, project_id FROM works_on  -- (*)
        ) t3; -- se obtin angajatii care lucreaza la proiecte cu buget DIFERIT de 10k
        -- si ang care lucreaza doar la o parte din proiectele cu buget EGAL cu 10k

in baza de date avem:
ang 148 care lucreaza la p2 si p3
ang 176 care lucreaza la p3   -- (*)

t1 selecteaza toti angajatii care lucreaza la proiecte 
t2 selecteaza toate proiectele care au buget egal cu 10k
produsul cartezian t1 si t2 obtine 
  -> 148 - p2 / 148 - p3
     176 - p2 / 176 - p3
     etc... 
 
t3 - din produsul cartezian eliminam elementele rezultate in cererea - (*) 
=> se obtine (in exemplul de mai sus): 176 deoarece acest ang nu lucreaza la toate proiectele cu buget de 10k
     

select * from works_on;
--Metoda 4 (A include B => B\A = Ø):
SELECT DISTINCT employee_id
FROM works_on a  -- angajatii care lucreaza la proiecte
WHERE NOT EXISTS 
        (
            (SELECT project_id
             FROM projects p
             WHERE budget = 10000  --proiecte cu buget de 10k (p2 si p3)
            )
            
             MINUS -- elimin proiectele la care anagajatul curent lucreaza 
             
            (SELECT p.project_id
             FROM projects p, works_on b
             WHERE p.project_id = b.project_id
             AND b.employee_id = a.employee_id
            ) -- in subcerere se obtin exact angajatii care lucreaza la proiecte cu buget DIFERIT de 10k
               -- sau care lucreaza doar la o parte din proiectele cu buget EGAL cu 10k
       );
-- in final obtin exact angajatii care lucreaza la TOATE proiectele cu buget EGAL cu 10k


1. Să se listeze informaţii despre angajaţii care au lucrat în toate proiectele 
demarate în primele 6 luni ale anului 2006.

select * from projects;

select employee_id, last_name, first_name
from employees
where employee_id in 
            (select employee_id
             from works_on
             where project_id in (select project_id
                                  from projects
                                  where start_date >= to_date('01-jan-06') 
                                        and start_date <= to_date('30-jun-06')
                                  )
          -- daca ne oprim cu solutia in acest punct obtinem angajatii care lucreaza atat la 
          -- toate proiectele demarate in primele 6 luni
          -- cat si la o parte din aceste proiecte
          -- dorim sa afisam ang care lucreaza la TOATE proiectele demarate in primele 6 luni!!!!!!!!!!!!!
            group by employee_id  -- grupand putem numara proiectele la care lucreaza fiecare angajat 
            having count(project_id) = (select count(*)
                                        from projects
                                        where start_date >= to_date('01-jan-06') 
                                              and start_date <= to_date('30-jun-06')
                                        ) -- daca nr proiectelor este egal cu nr proiectelor demarate in primele 
                                        -- 6 luni rezulta ca ang lucreaza la toate aceste proiecte
            );
            
            
2. Să se listeze informaţii despre proiectele la care au participat toţi angajaţii 
care au deţinut alte 2 posturi în firmă.           

select *
from projects  -- lista tuturor proiectelor
where project_id in (select project_id
                     from works_on  -- proiecte la care lucreaza angajati
                     where employee_id in
                          (select employee_id
                           from job_history
                           group by employee_id
                           having count(job_id) = 2
                           ) --angajaţii care au deţinut alte 2 posturi în firmă (101, 176, 200)
                      group by project_id -- grupam si numaram cati angajati lucreaza la acelasi proiect
                      having count(*) = (  select count(count(employee_id))
                                           from job_history
                                           group by employee_id
                                           having count(job_id) = 2
                                         )  -- si daca nr de angajati care lucreaza la acelasi proiect 
                                        -- este egal cu nr de ang care au detinut alte doua posturi in firma
                                        -- rezulta ca la aceste proiecte au participat TOTI ang care au detinut
                                        -- alte doua posturi in firma
                      );

3. Să se obţină numărul de angajaţi care au avut cel puţin trei job-uri, luându-se în considerare şi job-ul curent.

-- acest lucru inseamna cel putin 2 joburi in trecut - in job_history
select count(count(employee_id)) NrAng
from job_history
group by employee_id
having count(job_id) >= 2;


4. Pentru fiecare ţară, să se afişeze numărul de angajaţi din cadrul acesteia.

select count(employee_id), country_id
from employees join departments using (department_id)
               join locations using (location_id)
               right join countries using (country_id)
group by country_id;

Tema: Laborator 6: ex: 5, 6, 7
Deadline: 25.04 (sambata - inclusiv)

